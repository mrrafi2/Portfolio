
/* Cosmic Why Me Section - Performance Optimized */

.cosmicSection {
  position: relative;
  min-height: 100vh;
  background: radial-gradient(ellipse at center, #0d0d20 0%, #000408 70%, #000 100%);
  overflow: hidden;
  padding: 4rem 0;
  isolation: isolate;
}

/* CSS-only Starfield - Zero JS overhead */
.starfield {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 1;
}

.stars, .starsSecondary, .starsTertiary {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: transparent;
}

/* Primary stars - brighter, slower twinkle */
.stars {
  background-image: 
    radial-gradient(1px 1px at 20% 30%, #fff, transparent),
    radial-gradient(1px 1px at 40% 70%, rgba(255,255,255,0.8), transparent),
    radial-gradient(1px 1px at 90% 40%, rgba(255,255,255,0.9), transparent),
    radial-gradient(1px 1px at 70% 80%, #fff, transparent),
    radial-gradient(1px 1px at 10% 90%, rgba(255,255,255,0.7), transparent),
    radial-gradient(1px 1px at 80% 10%, #fff, transparent),
    radial-gradient(1px 1px at 30% 20%, rgba(255,255,255,0.8), transparent),
    radial-gradient(1px 1px at 60% 60%, #fff, transparent);
  background-size: 300px 300px;
  animation: twinkle 8s ease-in-out infinite;
}

/* Secondary stars - smaller, faster */
.starsSecondary {
  background-image: 
    radial-gradient(0.5px 0.5px at 25% 50%, rgba(130,88,255,0.8), transparent),
    radial-gradient(0.5px 0.5px at 75% 25%, rgba(0,255,204,0.6), transparent),
    radial-gradient(0.5px 0.5px at 15% 75%, rgba(255,0,204,0.7), transparent),
    radial-gradient(0.5px 0.5px at 85% 85%, rgba(255,204,0,0.5), transparent),
    radial-gradient(0.5px 0.5px at 45% 15%, rgba(0,204,255,0.6), transparent);
  background-size: 200px 200px;
  animation: twinkle 5s ease-in-out infinite reverse;
}

/* Tertiary stars - micro dots */
.starsTertiary {
  background-image: 
    radial-gradient(0.3px 0.3px at 10% 20%, rgba(255,255,255,0.4), transparent),
    radial-gradient(0.3px 0.3px at 90% 80%, rgba(255,255,255,0.3), transparent),
    radial-gradient(0.3px 0.3px at 50% 10%, rgba(255,255,255,0.5), transparent),
    radial-gradient(0.3px 0.3px at 30% 90%, rgba(255,255,255,0.2), transparent);
  background-size: 150px 150px;
  animation: twinkle 12s ease-in-out infinite;
}

@keyframes twinkle {
  0%, 100% { opacity: 0.3; }
  50% { opacity: 1; }
}

/* Subtle nebula overlay */
.nebulaOverlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: 
    radial-gradient(circle at 20% 80%, rgba(130, 88, 255, 0.05) 0%, transparent 50%),
    radial-gradient(circle at 80% 20%, rgba(0, 255, 204, 0.03) 0%, transparent 50%),
    radial-gradient(circle at 40% 40%, rgba(255, 0, 204, 0.04) 0%, transparent 50%);
  pointer-events: none;
  z-index: 1;
}

/* Container and layout */
.container {
  position: relative;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 2rem;
  z-index: 2;
}

.header {
  text-align: center;
  margin-bottom: 4rem;
}

.title {
  font-size: clamp(2.5rem, 5vw, 4rem);
  font-weight: 700;
  background: linear-gradient(135deg, #ffffff 0%, #8a58ff 50%, #00ffcc 100%);
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  margin: 0 0 1rem 0;
  line-height: 1.2;
  letter-spacing: -0.02em;
}

.intro {
  font-size: 1.25rem;
  color: rgba(255, 255, 255, 0.8);
  max-width: 600px;
  margin: 0 auto;
  line-height: 1.6;
}

/* Features grid */
.featuresGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
  gap: 2rem;
  margin-bottom: 4rem;
}

.featureCard {
  position: relative;
  background: rgba(20, 20, 40, 0.4);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 1rem;
  padding: 2rem;
  backdrop-filter: blur(10px);
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  cursor: pointer;
  overflow: hidden;
  opacity: 0;
  transform: translateY(50px) scale(0.9);
}

.featureCard.animated {
  opacity: 1;
  transform: translateY(0) scale(1);
  animation: cardSlideIn 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;
  animation-delay: var(--animation-delay);
}

.featureCard:hover {
  transform: translateY(-8px) scale(1.02);
  border-color: rgba(255, 255, 255, 0.3);
  box-shadow: 0 25px 50px rgba(0, 0, 0, 0.4);
}

.featureCard:hover .cardGlow {
  opacity: 1;
  transform: scale(1.2);
}

.cardGlow {
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: radial-gradient(circle, var(--glow-color) 0%, transparent 70%);
  opacity: 0;
  transform: scale(0.8);
  transition: all 0.5s ease-out;
  pointer-events: none;
  z-index: -1;
}

.cardIcon {
  font-size: 2.5rem;
  margin-bottom: 1.5rem;
  display: block;
  position: relative;
  transition: transform 0.3s ease;
}

.cardIcon.iconAnimated {
  animation: iconPulse 2s ease-in-out infinite;
}

.cardTitle {
  font-size: 1.5rem;
  font-weight: 600;
  color: #ffffff;
  margin: 0 0 1rem 0;
  line-height: 1.3;
}

.cardDescription {
  font-size: 1rem;
  line-height: 1.6;
  color: rgba(255, 255, 255, 0.8);
  margin: 0;
}


/* Stellar Vision Animation */
.stellarEffect {
  position: absolute;
  top: 30%;
  left: 60%;
  transform: translate(-20%, -20%);
  width: 100px;
  height: 100px;
  pointer-events: none;
}

.stellarParticle {
  position: absolute;
  width: 5px;
  height: 5px;
  background: #8a58ff;
  border-radius: 50%;
  animation: stellarExpand 3s ease-out infinite;
  animation-delay: calc(var(--i) * 0.2s);
  transform-origin: center;
}

.stellarParticle:nth-child(odd) {
  background: #00ffcc;
  animation-duration: 2.5s;
}

@keyframes stellarExpand {
  0% {
    transform: translate(0, 0) scale(0);
    opacity: 1;
  }
  50% {
    opacity: 0.8;
  }
  100% {
    transform: translate(calc(cos(var(--i) * 45deg) * 30px), calc(sin(var(--i) * 45deg) * 30px)) scale(1);
    opacity: 0;
  }
}

/* Warp Speed Animation */
.warpEffect {
  position: absolute;
  top: 0;  
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  overflow: hidden;
}

.warpLine {
  position: absolute;
  width: 2px;
  height: 100%;
  background: linear-gradient(to bottom, transparent, #00ffcc, transparent);
  animation: warpSpeed 1s ease-in infinite;
  animation-delay: calc(var(--i) * 0.1s);
  left: calc(20% + var(--i) * 10%);
}

@keyframes warpSpeed {
  0% {
    transform: translateY(-100%);
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    transform: translateY(100%);
    opacity: 0;
  }
}

/* Gravity Defying Animation */
.gravityEffect {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-10%, -15%);
  width: 100px;
  height: 100px;
  pointer-events: none;
}

.floatingParticle {
  position: absolute;
  width: 5px;
  height: 5px;
  background: #ff00cc;
  border-radius: 50%;
  animation: gravityFloat 4s ease-in-out infinite;
  animation-delay: calc(var(--i) * 0.5s);
}

@keyframes gravityFloat {
  0%, 100% {
    transform: translate(0, 0);
  }
  25% {
    transform: translate(20px, -15px);
  }
  50% {
    transform: translate(-10px, -25px);
  }
  75% {
    transform: translate(-20px, 10px);
  }
}

/* Orbit Animation */
.orbitEffect {
  position: absolute;
  top: 30%;
  left: 25%;
  transform: translate(-50%, -50%);
  width: 100px;
  height: 100px;
  pointer-events: none;
 animation: orbitSpin 3s linear infinite;
 transform-origin: center center;

}

.orbitRing {
  position: absolute;
  width: 100%;
  height: 100%;
  border: 1px solid rgba(255, 204, 0, 0.3);
  border-radius: 50%;
}

.orbitParticle {
  position: absolute;
  width: 6px;
  height: 6px;
  background: #ffcc00;
  border-radius: 50%;
  top: 0;
  left: 50%;
  transform: translateX(-50%);
}

@keyframes orbitSpin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

.collabCanvas {
  position: absolute; inset: 0;
  pointer-events: none;
  z-index: 2;
}
/* Focus Animation */
.focusEffect {
  position: absolute;
  inset: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  pointer-events: none;
}

.focusBeam {
  position: absolute;
  width: 4px;
  height: 120%;
  background: linear-gradient(to bottom, transparent, #ff7300, transparent);
  filter: drop-shadow(0 0 8px #ff7300);
  transform: rotate(0deg);
  animation: focusScanBeam 2s ease-in-out infinite;
}

@keyframes focusScanBeam {
  0%   { transform: rotate(-90deg) translateY(-50%); opacity: 0.3; }
  50%  { opacity: 1; }
  100% { transform: rotate(90deg) translateY(50%); opacity: 0.3; }
}

/* ---------- Collaboration effect (collabEffect, collabCenter, collabNode) ---------- */
/* Place this inside the feature card; uses --glow-color from the card */
.collabEffect {
  position: relative;
  width: 100%;
  height: 120px; /* adjust to taste */
  display: block;
  pointer-events: none;
  transform-origin: center;
  opacity: 0;
  transform: translateY(10px) scale(0.98);
  transition: opacity 420ms cubic-bezier(.2,.9,.3,1), transform 420ms cubic-bezier(.2,.9,.3,1);
}

.collabEffect.active {
  opacity: 1;
  transform: none;
}

/* central hub */
.collabCenter {
  position: absolute;
  left: 50%;
  top: 50%;
  width: 10px;
  height: 10px;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  background: rgba(255,255,255,0.92);
  box-shadow: 0 0 18px calc(1px + 0.5vw) rgba(255,255,255,0.08), 0 0 30px var(--glow-color, rgba(0,200,255,0.12));
  z-index: 2;
}

/* orbiting nodes */
/* --angle should be provided like "0deg", "60deg", etc. */
/* --delay small stagger for nicer motion */
.collabNode {
  --dist: 36px;               /* orbit radius (tweak) */
  position: absolute;
  left: 50%;
  top: 50%;
  width: 8px;
  height: 8px;
  border-radius: 999px;
  transform-origin: center;
  background: var(--glow-color, #00ccff);
  box-shadow: 0 0 10px calc(0.5px + 0.2vw) var(--glow-color, #00ccff);
  /* initial placement around the center according to angle */
  transform: rotate(var(--angle, 0deg)) translateX(var(--dist));
  z-index: 1;
  opacity: 0.95;
  animation: collab-orbit 6.6s linear infinite;
  animation-delay: var(--delay, 0s);
}

/* subtle pulse on nodes */
.collabNode::after {
  content: "";
  position: absolute;
  inset: -6px;
  border-radius: 50%;
  filter: blur(6px);
  background: radial-gradient(circle, var(--glow-color, rgba(0,204,255,0.2)), transparent 40%);
  opacity: 0.75;
  pointer-events: none;
}

/* rotate each node's transform through 360deg around center while preserving initial offset */
@keyframes collab-orbit {
  from {
    transform: rotate(var(--angle, 0deg)) translateX(var(--dist));
  }
  to {
    transform: rotate(calc(var(--angle, 0deg) + 360deg)) translateX(var(--dist));
  }
}


/* Focus effect (paste into WhyMe.module.css) */
.focusEffect {
  position: relative;
  width: 100%;
  height: 110px;
  display: block;
  pointer-events: none;
  opacity: 0;
  transform: translateY(6px) scale(0.98);
  transition: opacity 360ms cubic-bezier(.2,.9,.3,1), transform 360ms cubic-bezier(.2,.9,.3,1);
}

.focusEffect.active {
  opacity: 1;
  transform: none;
}

.focusRings {
  position: absolute;
  left: 50%;
  top: 36%;
  transform: translate(-50%, -50%);
  width: 72px;
  height: 72px;
  pointer-events: none;
  z-index: 1;
}

.focusRings span {
  position: absolute;
  left: 50%;
  top: 50%;
  display: block;
  border-radius: 50%;
  transform: translate(-50%, -50%) scale(0.6);
  width: calc(28px * var(--r));
  height: calc(28px * var(--r));
  border: 1px solid rgba(255,255,255,0.18);
  opacity: 0;
  animation: focus-pulse 1.6s ease-out infinite;
  animation-delay: calc(var(--r) * 0.06s);
  box-shadow: 0 0 14px rgba(255,255,255,0.02);
}

@keyframes focus-pulse {
  0%   { transform: translate(-50%, -50%) scale(0.6); opacity: 0; }
  20%  { opacity: 0.28; }
  60%  { transform: translate(-50%, -50%) scale(1.05); opacity: 0.12; }
  100% { transform: translate(-50%, -50%) scale(1.45); opacity: 0; }
}

.focusDot {
  position: absolute;
  left: 50%;
  top: 36%;
  transform: translate(-50%, -50%);
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: white;
  box-shadow: 0 0 18px 2px rgba(255,255,255,0.09), 0 0 30px var(--glow-color, rgba(255,160,0,0.12));
  z-index: 2;
}

.focusEffect.active .focusDot {
  transform: translate(-50%, -50%) scale(1.04);
  transition: transform 360ms ease;
}


/* Future Animation */
.futureEffect {
  position: absolute;
  inset: 0;
  perspective: 400px;      /* enable slight 3D */
  pointer-events: none;
  overflow: hidden;
}

.techGrid {
  position: absolute;
  top: calc(20% + var(--i) * 20%);
  left: -20px;
  width: 20px;
  height: 2px;
  background: var(--accent-tertiary);
  transform-origin: left center;
  transform: rotateY(30deg);
  filter: drop-shadow(0 0 4px var(--accent-tertiary));
  animation: futureGridFlow 3s linear infinite;
  animation-delay: calc(var(--i) * 0.4s);
}

@keyframes futureGridFlow {
  0%   { transform: translateX(-30px) rotateY(30deg); opacity: 0; }
  40%  { opacity: 1; }
  100% { transform: translateX(120%) rotateY(30deg); opacity: 0; }
}

/* Performance Animation */
.performanceEffect {
  position: absolute;
  top: 30%;
  left: 0;
  width: 100%;
  height: 2px;
  pointer-events: none;
}

.speedTrail {
  position: absolute;
  width: 30px;
  height: 2px;
  background: linear-gradient(to right, transparent, #ff6384, transparent);
  animation: speedRush 1.5s ease-in infinite;
  animation-delay: calc(var(--i) * 0.2s);
  top: calc(var(--i) * 8px);
}

@keyframes speedRush {
  0% {
    transform: translateX(-50px);
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    transform: translateX(150px);
    opacity: 0;
  }
}

/* Call to action */
.cta {
  text-align: center;
  margin-top: 4rem;
}

.ctaText {
  font-size: 1.25rem;
  color: rgba(255, 255, 255, 0.9);
  margin: 0 0 2rem 0;
}

.ctaButton {
  position: relative;
  background: linear-gradient(135deg, #8a58ff 0%, #00ffcc 100%);
  border: none;
  border-radius: 50px;
  padding: 1rem 2.5rem;
  font-size: 1.1rem;
  font-weight: 600;
  color: #ffffff;
  cursor: pointer;
  transition: all 0.3s ease;
  overflow: hidden;
  box-shadow: 0 10px 30px rgba(138, 88, 255, 0.3);
}

.ctaButton:hover {
  transform: translateY(-2px);
  box-shadow: 0 15px 40px rgba(138, 88, 255, 0.4);
}

.ctaButton:hover .buttonGlow {
  opacity: 1;
}

.buttonGlow {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(135deg, rgba(255,255,255,0.2) 0%, transparent 100%);
  opacity: 0;
  transition: opacity 0.3s ease;
  pointer-events: none;
}

.cursorTrailContainer {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 9999;
}

.cursorTrail {
  position: absolute;
  width: 4px;
  height: 4px;
  background: radial-gradient(circle, #8a58ff 0%, transparent 70%);
  border-radius: 50%;
  pointer-events: none;
  animation: trailFade 0.6s ease-out forwards;
  transform: translate(-50%, -50%);
}

@keyframes trailFade {
  0% {
    opacity: 0.8;
    transform: translate(-50%, -50%) scale(1);
  }
  100% {
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.3);
  }
}

.fadeInUp {
  animation: fadeInUp 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;
  animation-delay: var(--animation-delay, 0s);
  opacity: 0;
  transform: translateY(30px);
}

@keyframes fadeInUp {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes cardSlideIn {
  from {
    opacity: 0;
    transform: translateY(50px) scale(0.9);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

@keyframes iconPulse {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.1);
  }
}

/* Responsive design */
@media (max-width: 768px) {
  .cosmicSection {
    padding: 2rem 0;
  }
  
  .container {
    padding: 0 1rem;
  }
  
  .featuresGrid {
    grid-template-columns: 1fr;
    gap: 1.5rem;
  }
  
  .featureCard {
    padding: 1.5rem;
  }
  
  .title {
    font-size: 2.5rem;
  }
  
  .intro {
    font-size: 1.1rem;
  }
}

@media (prefers-reduced-motion: reduce) {
  .stars,
  .starsSecondary,
  .starsTertiary,
  .fadeInUp,
  .cursorTrail,
  .stellarParticle,
  .warpLine,
  .floatingParticle,
  .orbitRing,
  .orbitParticle,
  .pulseRing,
  .connectionLine,
  .focusBeam,
  .focusTarget,
  .techGrid,
  .speedTrail,
  .iconAnimated {
    animation: none;
  }
  
  .featureCard {
    transition: none;
  }
  
  .featureCard:hover {
    transform: none;
  }
}

.featureCard,
.ctaButton,
.cardGlow,
.buttonGlow,
.stellarParticle,
.warpLine,
.floatingParticle,
.orbitRing,
.orbitParticle,
.connectionLine,
.techGrid,
.speedTrail {
  will-change: transform;
  transform-style: preserve-3d;
  backface-visibility: hidden;
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .featureCard {
    border-color: #ffffff;
    background: rgba(0, 0, 0, 0.8);
  }
  
  .title,
  .cardTitle {
    color: #ffffff;
    background: none;
    -webkit-text-fill-color: unset;
  }
}
